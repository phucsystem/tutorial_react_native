{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/Phuc/Workspace/tutorial_react_native/food2/src/screens/SearchScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"../components/SearchBar\";\nimport yelp from \"../api/yelp\";\n\nvar debug = require('debug');\n\ndebug.enable('axios');\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      results = _useState4[0],\n      setResults = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessage = _useState6[0],\n      setErrorMessage = _useState6[1];\n\n  var searchApi = function searchApi(searchTerm) {\n    var response;\n    return _regeneratorRuntime.async(function searchApi$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('hi there');\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(yelp.get('/search', {\n              params: {\n                limit: 50,\n                term: searchTerm,\n                location: 'san jose'\n              }\n            }));\n\n          case 4:\n            response = _context.sent;\n            setResults(response.data.businesses);\n            setErrorMessage('');\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            setErrorMessage('Something went wrong');\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: function onTermSubmit() {\n      return searchApi(term);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), errorMessage ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, errorMessage) : null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"We have found \", results.length, \" results\"));\n};\n\nvar styles = StyleSheet.create({});\nexport default SearchScreen;","map":{"version":3,"sources":["/Users/mac/Documents/Phuc/Workspace/tutorial_react_native/food2/src/screens/SearchScreen.js"],"names":["React","useState","useEffect","SearchBar","yelp","debug","require","enable","SearchScreen","term","setTerm","results","setResults","errorMessage","setErrorMessage","searchApi","searchTerm","console","log","get","params","limit","location","response","data","businesses","length","styles","StyleSheet","create"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,IAAP;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEAD,KAAK,CAACE,MAAN,CAAa,OAAb;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACCP,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBQ,IADgB;AAAA,MACVC,OADU;;AAAA,mBAEOT,QAAQ,CAAC,EAAD,CAFf;AAAA;AAAA,MAEhBU,OAFgB;AAAA,MAEPC,UAFO;;AAAA,mBAGiBX,QAAQ,CAAC,EAAD,CAHzB;AAAA;AAAA,MAGhBY,YAHgB;AAAA,MAGFC,eAHE;;AAIvB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAAMC,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AADc;AAAA;AAAA,6CAGad,IAAI,CAACe,GAAL,CAAS,SAAT,EAAoB;AACvCC,cAAAA,MAAM,EAAE;AACJC,gBAAAA,KAAK,EAAE,EADH;AAEJZ,gBAAAA,IAAI,EAAEO,UAFF;AAGJM,gBAAAA,QAAQ,EAAE;AAHN;AAD+B,aAApB,CAHb;;AAAA;AAGJC,YAAAA,QAHI;AAUVX,YAAAA,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcC,UAAf,CAAV;AACAX,YAAAA,eAAe,CAAC,EAAD,CAAf;AAXU;AAAA;;AAAA;AAAA;AAAA;AAaVA,YAAAA,eAAe,CAAC,sBAAD,CAAf;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAmBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEL,IADV;AAEI,IAAA,YAAY,EAAEC,OAFlB;AAGI,IAAA,YAAY,EAAE;AAAA,aAAMK,SAAS,CAACN,IAAD,CAAf;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKI,YAAY,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,YAAP,CAAH,GAAiC,IANlD,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBF,OAAO,CAACe,MAA7B,aAPJ,CADJ;AAWH,CAlCD;;AAoCA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAerB,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {View, Text, StyleSheet, ScrollView} from 'react-native';\nimport SearchBar from '../components/SearchBar';\nimport yelp from \"../api/yelp\";\n\nlet debug = require('debug');\n\ndebug.enable('axios');\n\nconst SearchScreen = () => {\n    const [term, setTerm] = useState('');\n    const [results, setResults] = useState([]);\n    const [errorMessage, setErrorMessage] = useState('');\n    const searchApi = async searchTerm => {\n        console.log('hi there');\n        try {\n            const response = await yelp.get('/search', {\n                params: {\n                    limit: 50,\n                    term: searchTerm,\n                    location: 'san jose'\n                }\n            });\n            setResults(response.data.businesses);\n            setErrorMessage('');\n        } catch (e) {\n            setErrorMessage('Something went wrong')\n        }\n    }\n\n    \n\n    return (\n        <View>\n            <SearchBar\n                term={term}\n                onTermChange={setTerm}\n                onTermSubmit={() => searchApi(term)}\n            />\n            {errorMessage ? <Text>{errorMessage}</Text> : null}\n            <Text>We have found {results.length} results</Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default SearchScreen;\n"]},"metadata":{},"sourceType":"module"}