{
  "ast": null,
  "code": "import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mac/Documents/Phuc/Workspace/tutorial_react_native/food2/src/screens/SearchScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SearchBar from \"../components/SearchBar\";\nimport useResults from \"../hooks/useResults\";\n\nvar debug = require('debug');\n\ndebug.enable('axios');\n\nvar SearchScreen = function SearchScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      term = _useState2[0],\n      setTerm = _useState2[1];\n\n  var _useResults = useResults(),\n      _useResults2 = _slicedToArray(_useResults, 2),\n      results = _useResults2[0],\n      errorMessage = _useResults2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, React.createElement(SearchBar, {\n    term: term,\n    onTermChange: setTerm,\n    onTermSubmit: function onTermSubmit() {\n      return searchApi(term);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), errorMessage ? React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, errorMessage) : null, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"We have found \", results.length, \" results\"));\n};\n\nvar styles = StyleSheet.create({});\nexport default SearchScreen;",
  "map": {
    "version": 3,
    "sources": [
      "/Users/mac/Documents/Phuc/Workspace/tutorial_react_native/food2/src/screens/SearchScreen.js"
    ],
    "names": [
      "React",
      "useState",
      "useEffect",
      "SearchBar",
      "useResults",
      "debug",
      "require",
      "enable",
      "SearchScreen",
      "term",
      "setTerm",
      "results",
      "errorMessage",
      "searchApi",
      "length",
      "styles",
      "StyleSheet",
      "create"
    ],
    "mappings": ";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;AAEA,OAAOC,SAAP;AACA,OAAOC,UAAP;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AAEAD,KAAK,CAACE,MAAN,CAAa,OAAb;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,kBACCP,QAAQ,CAAC,EAAD,CADT;AAAA;AAAA,MAChBQ,IADgB;AAAA,MACVC,OADU;;AAAA,oBAESN,UAAU,EAFnB;AAAA;AAAA,MAEhBO,OAFgB;AAAA,MAEPC,YAFO;;AAIvB,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAEH,IADV;AAEI,IAAA,YAAY,EAAEC,OAFlB;AAGI,IAAA,YAAY,EAAE;AAAA,aAAMG,SAAS,CAACJ,IAAD,CAAf;AAAA,KAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMKG,YAAY,GAAG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,YAAP,CAAH,GAAiC,IANlD,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBD,OAAO,CAACG,MAA7B,aAPJ,CADJ;AAWH,CAfD;;AAiBA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAeT,YAAf",
    "sourcesContent": [
      "import React, {useState, useEffect} from 'react';\nimport {View, Text, StyleSheet, ScrollView} from 'react-native';\nimport SearchBar from '../components/SearchBar';\nimport useResults from \"../hooks/useResults\";\n\nlet debug = require('debug');\n\ndebug.enable('axios');\n\nconst SearchScreen = () => {\n    const [term, setTerm] = useState('');\n    const [results, errorMessage] = useResults();\n\n    return (\n        <View>\n            <SearchBar\n                term={term}\n                onTermChange={setTerm}\n                onTermSubmit={() => searchApi(term)}\n            />\n            {errorMessage ? <Text>{errorMessage}</Text> : null}\n            <Text>We have found {results.length} results</Text>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default SearchScreen;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}